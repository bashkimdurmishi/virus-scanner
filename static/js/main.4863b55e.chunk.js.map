{"version":3,"sources":["components/progressbar/ProgressBar.js","pages/Home.js","pages/File.js","routes/routes.js","components/sidebar/SidebarData.js","components/sidebar/Sidebar.js","App.js","index.js"],"names":["ProgressBar","props","useState","offset","setOffset","color","setColor","stroke","setStroke","circleRef","useRef","size","malicious","scans","strokeWidth","circleTwoStroke","center","radius","circumference","Math","PI","useEffect","current","style","className","width","height","cx","cy","r","ref","strokeDasharray","strokeDashoffset","x","y","fill","Home","url","setUrl","data","setData","stats","setStats","loading","setLoading","instance","axios","create","baseURL","headers","defaults","get","process","REACT_APP_VIRUS_TOTAL_KEY","post","renderData","tableRows","Object","entries","attributes","last_analysis_results","key","value","push","TableRow","TableCell","component","scope","align","category","result","sum","onSubmit","e","preventDefault","encodedUrl","btoa","split","console","log","then","response","status","last_analysis_stats","values","reduce","a","b","catch","err","handleSubmit","type","placeholder","onChange","target","TableContainer","Table","TableHead","TableBody","colSpan","File","routes","path","fileId","setFileId","refresh","setRefresh","getAnalasisResult","scannedFileId","results","Completionist","onClick","onDrop","file","formData","FormData","append","id","minHeight","date","Date","now","SidebarData","title","icon","fontSize","link","Sidebar","map","val","to","pathname","rel","App","route","idx","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4863b55e.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './ProgressBar.css';\r\n\r\nconst ProgressBar = (props) => {\r\n  const [offset, setOffset] = useState(0);\r\n  const [color, setColor] = useState(1);\r\n  const [stroke, setStroke] = useState(2);\r\n  const circleRef = useRef(null);\r\n  const { size, malicious, scans, strokeWidth, circleTwoStroke } = props;\r\n\r\n  const center = size / 2;\r\n  const radius = size / 2 - strokeWidth / 2;\r\n  const circumference = 2 * Math.PI * radius;\r\n\r\n  useEffect(() => {\r\n    const progressOffset = ((scans - malicious) / scans) * circumference;\r\n    setOffset(progressOffset);\r\n    circleRef.current.style =\r\n      'transition: stroke-dashoffset 850ms ease-in-out;';\r\n  }, [setOffset, scans, circumference, malicious, color, offset]);\r\n\r\n  useEffect(() => {\r\n    if (malicious > 0) {\r\n      const color = 'red';\r\n      setColor(color);\r\n    } else {\r\n      const color = '#3cb371';\r\n      setColor(color);\r\n    }\r\n  }, [setColor, malicious, color]);\r\n\r\n  useEffect(() => {\r\n    if (malicious > 0) {\r\n      const stroke = '#D0D0D0';\r\n      setStroke(stroke);\r\n    } else {\r\n      const stroke = '#3cb371';\r\n      setStroke(stroke);\r\n    }\r\n  }, [setStroke, malicious, stroke]);\r\n\r\n  return (\r\n    <>\r\n      <svg className=\"svg d-none d-md-block\" width={size} height={size}>\r\n        <circle\r\n          className=\"svg-circle-bg\"\r\n          stroke={stroke}\r\n          cx={center}\r\n          cy={center}\r\n          r={radius}\r\n          strokeWidth={strokeWidth}\r\n        />\r\n        <circle\r\n          className=\"svg-circle\"\r\n          ref={circleRef}\r\n          stroke={circleTwoStroke}\r\n          cx={center}\r\n          cy={center}\r\n          r={radius}\r\n          strokeWidth={strokeWidth}\r\n          strokeDasharray={circumference}\r\n          strokeDashoffset={offset}\r\n        />\r\n        <text\r\n          x={`${center}`}\r\n          y={`${center}`}\r\n          className=\"svg-circle-text big-text\"\r\n          fill={color}\r\n        >\r\n          {malicious}\r\n        </text>\r\n        <text\r\n          x={`${center}`}\r\n          y={`${center + 20}`}\r\n          className=\"svg-circle-text white-fill\"\r\n        >\r\n          /{scans}\r\n        </text>\r\n      </svg>\r\n    </>\r\n  );\r\n};\r\n\r\nProgressBar.propTypes = {\r\n  size: PropTypes.number.isRequired,\r\n  malicious: PropTypes.number.isRequired,\r\n  scans: PropTypes.number.isRequired,\r\n  strokeWidth: PropTypes.number.isRequired,\r\n  circleTwoStroke: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ProgressBar;","import React, { useState } from 'react';\r\nimport axios from \"axios\";\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport ProgressBar from '../components/progressbar/ProgressBar';\r\n\r\n\r\nfunction Home() {\r\n    const [url, setUrl] = useState(\"\");\r\n    const [data, setData] = useState(null);\r\n    const [stats, setStats] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const baseUrl = \"https://www.virustotal.com/api/v3\";\r\n\r\n    const instance = axios.create({\r\n        baseURL: baseUrl,\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        }\r\n    })\r\n\r\n    instance.defaults.headers.get['x-apikey'] = process.env.REACT_APP_VIRUS_TOTAL_KEY;\r\n    instance.defaults.headers.post['x-apikey'] = process.env.REACT_APP_VIRUS_TOTAL_KEY;\r\n\r\n    const handleSubmit = (e) => {\r\n        setData(null);\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        var encodedUrl = btoa(url);\r\n        encodedUrl = encodedUrl.split(\"=\")[0];\r\n        console.log(encodedUrl);\r\n        instance.get(`/urls/${encodedUrl}`).then(response => {\r\n            if (response.status >= 200 || response.status <= 299){\r\n                let stats = response.data.data.attributes.last_analysis_stats;\r\n                // Sum of the results (harmless, malicius, suspicious, etc)\r\n                stats.sum = Object.values(stats).reduce((a,b) => a+b, 0);\r\n                \r\n                setLoading(false);\r\n                setData(response.data.data);\r\n                setStats(stats);\r\n            }\r\n        }).catch(err => {\r\n            setLoading(false);\r\n            setData(\"error\");\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    const renderLoading = () => {\r\n        return (\r\n            <TableRow key={\"no-data\"}>\r\n                <TableCell component=\"td\" colSpan={3} scope=\"row\">Loading results...</TableCell>\r\n            </TableRow>\r\n        )\r\n    }\r\n\r\n    const renderData = () => {\r\n        let tableRows = [];\r\n\r\n        if(data) {\r\n            for (const [key, value] of Object.entries(data.attributes.last_analysis_results)) {\r\n                tableRows.push(\r\n                    <TableRow key={key}>\r\n                        <TableCell component=\"td\" scope=\"row\">\r\n                            {key}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{value.category}</TableCell>\r\n                        <TableCell align=\"right\">{value.result}</TableCell>\r\n                    </TableRow>\r\n                )\r\n            }\r\n        }\r\n        return tableRows;\r\n    }\r\n\r\n    const renderTable = () => {\r\n        return (\r\n            <TableContainer className=\"mt-4\">\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Engine</TableCell>\r\n                            <TableCell align=\"right\">Category</TableCell>\r\n                            <TableCell align=\"right\">Result</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {loading && renderLoading()}\r\n                        {data && renderData()}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div className=\"main-section mx-3\">\r\n            {stats && <ProgressBar\r\n                className=\"align-self-start\"\r\n                key={\"progressbar\"}\r\n                malicious={stats.malicious}\r\n                scans={stats.sum}\r\n                size={100}\r\n                strokeWidth={10}\r\n                circleTwoStroke=\"red\"\r\n            />}\r\n            <div className=\"d-flex flex-column align-items-center\">\r\n                <h2>URL SCAN</h2>\r\n                <form className=\"d-flex\" onSubmit={(e) => {handleSubmit(e)}}>\r\n                    <input className=\"form-control\" type=\"text\" value={url} placeholder=\"Eg: google.com\" onChange={(e) => {\r\n                        setUrl(e.target.value);\r\n                        }} />\r\n                    <button className=\"btn btn-primary mx-2\">Scan</button>\r\n                </form>\r\n            </div> \r\n            {renderTable()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\nimport axios from \"axios\";\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport ProgressBar from '../components/progressbar/ProgressBar';\r\nimport Countdown from 'react-countdown';\r\n\r\nimport { StyledDropZone } from 'react-drop-zone';\r\nimport 'react-drop-zone/dist/styles.css';\r\n\r\n\r\nfunction File() {\r\n    const [fileId, setFileId] = useState(\"\");\r\n    const [data, setData] = useState(null);\r\n    const [stats, setStats] = useState(null);\r\n    const [refresh, setRefresh] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const baseUrl = \"https://www.virustotal.com/api/v3\";\r\n\r\n    const instance = axios.create({\r\n        baseURL: baseUrl,\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        }\r\n    })\r\n\r\n    instance.defaults.headers.get['x-apikey'] = process.env.REACT_APP_VIRUS_TOTAL_KEY;\r\n    instance.defaults.headers.post['x-apikey'] = process.env.REACT_APP_VIRUS_TOTAL_KEY;\r\n    \r\n    const onDrop = (file) => {\r\n        setData(null);\r\n        setLoading(true);\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"file\", file);\r\n\r\n        instance.post(`/files`, formData).then(response => {\r\n            if (response.status >= 200 || response.status <= 299){\r\n                setFileId(response.data.data.id);\r\n                getAnalasisResult(response.data.data.id);\r\n            }\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    const getAnalasisResult = (scannedFileId) => {\r\n        instance.get(`/analyses/${scannedFileId}`).then(response => {\r\n            if (response.status >= 200 || response.status <= 299){\r\n                if(response.data.data.attributes.status === \"queued\") {\r\n                    setRefresh(true);\r\n                    setLoading(false);\r\n                } else {\r\n                    let stats = response.data.data.attributes.stats;\r\n                    // Sum of the results (harmless, malicius, suspicious, etc)\r\n                    stats.sum = Object.values(stats).reduce((a,b) => a+b, 0);\r\n\r\n                    setStats(stats);\r\n                    setData(response.data.data);\r\n                    setLoading(false);\r\n                }\r\n                return response.data;\r\n            }\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    const renderLoading = () => {\r\n        return (\r\n            <TableRow key={\"no-data\"}>\r\n                <TableCell component=\"td\" colSpan={3} scope=\"row\">Loading results...</TableCell>\r\n            </TableRow>\r\n        )\r\n    }\r\n    \r\n    const renderAnalysing = () => {\r\n        return (\r\n            <TableRow key={\"analysing-data\"}>\r\n                <TableCell component=\"td\" colSpan={3} scope=\"row\">Analysing file... File is in queue, please wait and press the refresh button after 10 seconds.</TableCell>\r\n            </TableRow>\r\n        )\r\n    }\r\n\r\n    const renderData = () => {\r\n        let tableRows = [];\r\n\r\n        if(data) {\r\n            for (const [key, value] of Object.entries(data.attributes.results)) {\r\n                tableRows.push(\r\n                    <TableRow key={key}>\r\n                        <TableCell component=\"td\" scope=\"row\">\r\n                            {key}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{value.category}</TableCell>\r\n                    </TableRow>\r\n                )\r\n            }\r\n        }\r\n        return tableRows;\r\n    }\r\n\r\n    const renderTable = () => {\r\n        return (\r\n            <TableContainer className=\"mt-4\">\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Engine</TableCell>\r\n                            <TableCell align=\"right\">Category</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {refresh && renderAnalysing()}\r\n                        {loading && renderLoading()}\r\n                        {data && renderData()}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n    }\r\n\r\n    const Completionist = () => <button className=\"btn btn-primary mt-3\" onClick={() => {getAnalasisResult(fileId); setRefresh(false);}}>Refresh</button>;\r\n\r\n    return(\r\n        <div className=\"main-section mx-3 position-relative\">\r\n            {stats && <ProgressBar\r\n                key={\"progressbar\"}\r\n                malicious={stats.malicious}\r\n                scans={stats.sum}\r\n                size={100}\r\n                strokeWidth={10}\r\n                circleTwoStroke=\"red\"\r\n            />}\r\n            <h2>FILE SCAN</h2>\r\n            <StyledDropZone onDrop={(file) => {onDrop(file)}} className=\"file-input text-white\" style={{minHeight: '50px'}} />\r\n            {refresh && (\r\n            <h2 className=\"mt-2\">\r\n                <Countdown className=\"text-\" date={Date.now() + 10000}>\r\n                    <Completionist />\r\n                </Countdown>\r\n            </h2>)}\r\n            {renderTable()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default File;","import Home from \"../pages/Home\";\r\nimport File from \"../pages/File\";\r\n\r\nconst routes = [\r\n\t{ path: \"/\", component: Home },\r\n\t{ path: \"/file\", component: File },\r\n];\r\n\r\nexport default routes;","import LinkIcon from '@mui/icons-material/Link';\r\nimport InsertDriveFileIcon from '@mui/icons-material/InsertDriveFile';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\n\r\nconst color = {color: 'white'};\r\nconst size = 'large';\r\n\r\nexport const SidebarData = [\r\n    {\r\n      id: 1,\r\n      title: 'Url',\r\n      icon: <LinkIcon style={color} fontSize={size} />,\r\n      link: '/',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'File',\r\n      icon: <InsertDriveFileIcon style={color} fontSize={size} />,\r\n      link: '/file',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'About Us',\r\n      icon: <InfoIcon style={color} fontSize={size} />,\r\n    },\r\n  ];\r\n  \r\n  export default SidebarData;","import React from 'react';\r\nimport {Link as NavLink} from \"react-router-dom\";\r\nimport SecurityIcon from '@mui/icons-material/Security';\r\nimport { SidebarData } from './SidebarData';\r\n\r\nfunction Sidebar() {\r\n  return (\r\n    <div className=\"sidebar p-4 text-center\">\r\n      <div className=\"d-flex flex-row align-items-center justify-content-center\">\r\n        <SecurityIcon fontSize=\"large\" />\r\n        <div className=\"d-flex flex-column pt-3\">\r\n            <h3>EASY SCAN</h3>\r\n            <p>For url and files</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar-content\">\r\n        {SidebarData.map((val, key) => {\r\n          if(val.id === 3) {\r\n            return (\r\n              <NavLink className=\"btn sidebar-item\" to={{ pathname: \"https://bashkimdurmishi.github.io/portfolio/\" }} target=\"_blank\" rel=\"noopener noreferrer\"> \r\n                <div>{val.icon}</div>\r\n                <h4> {val.title}</h4>\r\n              </NavLink>\r\n            )\r\n          }\r\n          return (\r\n            <NavLink className=\"btn sidebar-item\" key={key} to={val.link}>\r\n                <div>{val.icon}</div>\r\n                <h4> {val.title}</h4>\r\n            </NavLink>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Routes \nimport routes from \"./routes/routes\";\n\n// Components\nimport Sidebar from \"./components/sidebar/Sidebar\";\n\nfunction App() {\n  return (\n    <main>\n      <div className=\"circle d-none d-md-block\"/>\n      <div className=\"container p-0\">\n        <Router>\n          <Sidebar />\n            <Switch>\n              {routes.map((route, idx) => (\n                <Route\n                  path={route.path}\n                  exact\n                  component={route.component}\n                  key={idx}\n                />\n              ))}\n            </Switch>\n        </Router>\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}